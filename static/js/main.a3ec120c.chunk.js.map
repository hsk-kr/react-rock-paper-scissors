{"version":3,"sources":["components/EntryPage/styles.module.scss","components/GamePage/styles.module.scss","components/ResultPage/styles.module.scss","contexts/GameContext.js","components/EntryPage/index.js","components/GamePage/index.js","components/ResultPage/index.js","router.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","GameContext","createContext","GameContextProvider","children","useState","page","setPage","round","setRound","me","com","value","result","setResult","Provider","cx","classNames","bind","styles","EntryPage","values","setValues","useContext","handleChange","useCallback","name","e","target","handleStart","parseInt","class","onChange","type","onClick","GamePage","score","setScore","myChoice","setMyChoice","gameEnd","useMemo","handleSelect","choice","useEffect","icons","document","getElementsByClassName","numOfChange","Math","random","changeDelay","itvComputerChoosing","setInterval","parentNode","style","border","clearInterval","setTimeout","className","selected","icon","faHandRock","faHandPaper","faHandScissors","ResultPage","resultText","Router","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3ec120c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"entry-page\":\"styles_entry-page__2rBMW\",\"round\":\"styles_round__35q5p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game-page\":\"styles_game-page__SYhLE\",\"score-section\":\"styles_score-section__ZSC8d\",\"game-section\":\"styles_game-section__ukR6U\",\"selected\":\"styles_selected__IMJuw\",\"icon\":\"styles_icon__334Kp\",\"me-choice\":\"styles_me-choice__2GzVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result-page\":\"styles_result-page__wouJI\",\"result-card\":\"styles_result-card__2TPnz\"};","import React, { useState, createContext } from 'react';\r\n\r\n// Constants for navigation\r\nexport const ENTRY_PAGE = 1;\r\nexport const GAME_PAGE = 2;\r\nexport const RESULT_PAGE = 3;\r\n\r\nconst GameContext = createContext({});\r\n\r\nconst GameContextProvider = ({ children }) => {\r\n  const [page, setPage] = useState(ENTRY_PAGE);\r\n  const [round, setRound] = useState(0);\r\n  const [result, setResult] = useState({\r\n    round: 0,\r\n    me: 0,\r\n    com: 0,\r\n  });\r\n\r\n  const value = {\r\n    round,\r\n    setRound,\r\n    page,\r\n    setPage,\r\n    result,\r\n    setResult,\r\n  };\r\n\r\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>;\r\n};\r\n\r\nexport { GameContext, GameContextProvider };\r\n","import React, { useCallback, useState, useContext } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\nimport { GameContext, GAME_PAGE } from 'contexts/GameContext';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst EntryPage = () => {\r\n  const [values, setValues] = useState({\r\n    round: '1',\r\n  });\r\n  const { setRound, setPage } = useContext(GameContext);\r\n\r\n  const handleChange = useCallback(\r\n    (name) => (e) => setValues({ ...values, [name]: e.target.value }),\r\n    [values]\r\n  );\r\n\r\n  const handleStart = useCallback(() => {\r\n    setRound(parseInt(values.round));\r\n    setPage(GAME_PAGE);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values]);\r\n\r\n  return (\r\n    <div class={cx('entry-page')}>\r\n      <div>\r\n        <h1>Rock Paper Scissors</h1>\r\n        <div class={cx('round')}>\r\n          <span>Round</span>\r\n          <select value={values.round} onChange={handleChange('round')}>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"5\">5</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"button\" onClick={handleStart}>\r\n          Game Start\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EntryPage;\r\n","import React, {\r\n  useCallback,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n} from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faHandRock,\r\n  faHandPaper,\r\n  faHandScissors,\r\n} from '@fortawesome/free-regular-svg-icons';\r\nimport { GameContext, RESULT_PAGE } from 'contexts/GameContext';\r\n\r\nconst NONE = 0;\r\nconst ROCK = 1;\r\nconst PAPER = 2;\r\nconst SCISSORS = 3;\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst GamePage = () => {\r\n  const [score, setScore] = useState({\r\n    round: 1,\r\n    me: 0,\r\n    com: 0,\r\n  });\r\n  const [myChoice, setMyChoice] = useState(NONE);\r\n  const { round, setPage, setResult } = useContext(GameContext);\r\n  const gameEnd = useMemo(() => score.round > round, [score, round]);\r\n\r\n  const handleSelect = useCallback(\r\n    (choice) => () => {\r\n      if (myChoice !== NONE) return;\r\n\r\n      setMyChoice(choice);\r\n    },\r\n    [myChoice]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (gameEnd) {\r\n      setResult({ ...score, round: score.round - 1 });\r\n      setPage(RESULT_PAGE);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myChoice]);\r\n\r\n  // Computer select when user chose one\r\n  useEffect(() => {\r\n    if (myChoice === NONE) return;\r\n\r\n    const icons = document.getElementsByClassName(cx('icon'));\r\n    let numOfChange = parseInt(Math.random() * 10) + 5;\r\n    let com = parseInt(Math.random() * 3) + 1;\r\n    let changeDelay = parseInt(Math.random() * 500) + 100;\r\n\r\n    const itvComputerChoosing = setInterval(() => {\r\n      icons[numOfChange % 3].parentNode.style.border = '';\r\n      numOfChange--;\r\n      icons[numOfChange % 3].parentNode.style.border = '2px solid red';\r\n\r\n      if (numOfChange === 1) {\r\n        // Result\r\n        score.round++;\r\n\r\n        if (myChoice === numOfChange) {\r\n        } else if (\r\n          (myChoice === ROCK && com === SCISSORS) ||\r\n          (myChoice === PAPER && com === ROCK) ||\r\n          (myChoice === SCISSORS && com === PAPER)\r\n        ) {\r\n          score.me++;\r\n        } else {\r\n          score.com++;\r\n        }\r\n        setScore({ ...score }); // Update the score\r\n\r\n        clearInterval(itvComputerChoosing);\r\n\r\n        setTimeout(() => {\r\n          icons[numOfChange % 3].parentNode.style.border = '';\r\n          setMyChoice(NONE);\r\n        }, 1500);\r\n      } else {\r\n      }\r\n    }, changeDelay);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [myChoice]);\r\n\r\n  return (\r\n    <div className={cx('game-page')}>\r\n      <h2>Round {gameEnd ? 'END' : score.round}</h2>\r\n      <div className={cx('score-section')}>\r\n        <span>ME: {score.me}</span>\r\n        <span>VS</span>\r\n        <span>COM: {score.com}</span>\r\n      </div>\r\n      <div className={cx('game-section', { selected: myChoice !== NONE })}>\r\n        <div>\r\n          <FontAwesomeIcon\r\n            className={cx('icon', { 'me-choice': myChoice === ROCK })}\r\n            icon={faHandRock}\r\n            onClick={handleSelect(ROCK)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <FontAwesomeIcon\r\n            className={cx('icon', { 'me-choice': myChoice === PAPER })}\r\n            icon={faHandPaper}\r\n            onClick={handleSelect(PAPER)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <FontAwesomeIcon\r\n            className={cx('icon', { 'me-choice': myChoice === SCISSORS })}\r\n            icon={faHandScissors}\r\n            onClick={handleSelect(SCISSORS)}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","import React, { useContext, useMemo } from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport styles from './styles.module.scss';\r\nimport { GameContext, ENTRY_PAGE } from 'contexts/GameContext';\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst ResultPage = () => {\r\n  const { result, setPage } = useContext(GameContext);\r\n  const resultText = useMemo(() => {\r\n    if (result.me > result.com) {\r\n      return 'WIN';\r\n    } else if (result.me < result.com) {\r\n      return 'LOSE';\r\n    } else {\r\n      return 'DRAW';\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className={cx('result-page')}>\r\n      <div className={cx('result-card')}>\r\n        <h1>{resultText}</h1>\r\n        <hr />\r\n        <span>ROUND: {result.round}</span>\r\n        <span>ME: {result.me}</span>\r\n        <span>COM: {result.com}</span>\r\n        <hr />\r\n        <button onClick={() => setPage(ENTRY_PAGE)}>HOME</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultPage;\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  GameContext,\r\n  ENTRY_PAGE,\r\n  GAME_PAGE,\r\n  RESULT_PAGE,\r\n} from 'contexts/GameContext';\r\n\r\n// Pages\r\nimport EntryPage from 'components/EntryPage';\r\nimport GamePage from 'components/GamePage';\r\nimport ResultPage from 'components/ResultPage';\r\n\r\nfunction Router() {\r\n  const { page } = useContext(GameContext);\r\n\r\n  switch (page) {\r\n    case ENTRY_PAGE:\r\n      return <EntryPage />;\r\n    case GAME_PAGE:\r\n      return <GamePage />;\r\n    case RESULT_PAGE:\r\n      return <ResultPage />;\r\n    default:\r\n      return <div>ERROR</div>;\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import { GameContextProvider } from 'contexts/GameContext';\nimport Router from './router';\n\nfunction App() {\n  return (\n    <GameContextProvider>\n      <Router />\n    </GameContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}